{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5257bb27",
   "metadata": {},
   "source": [
    "# Generalized LASSO\n",
    "## Getting started with Generalized LASSO\n",
    "\n",
    "This notebook contains examples of how to solve total variation denoising problem.\n",
    "\n",
    "For more details, please check the documentation website https://pygranso.readthedocs.io/en/latest/"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08dfdd50",
   "metadata": {},
   "source": [
    "## Import all necessary modules and add PyGRANSO src folder to system path."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "90ed32f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import time\n",
    "import torch\n",
    "import sys\n",
    "## Adding PyGRANSO directories. Should be modified by user\n",
    "sys.path.append('/home/buyun/Documents/GitHub/PyGRANSO')\n",
    "from pygranso import pygranso\n",
    "from pygransoStruct import Options, Data, GeneralStruct "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17a1b7fe",
   "metadata": {},
   "source": [
    "## Specify torch device, and generate data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8b4842e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "device = torch.device( 'cpu')\n",
    "n = 80\n",
    "eta = 0.5 # parameter for penalty term\n",
    "torch.manual_seed(1)\n",
    "b = torch.rand(n,1)\n",
    "pos_one = torch.ones(n-1)\n",
    "neg_one = -torch.ones(n-1)\n",
    "F = torch.zeros(n-1,n)\n",
    "F[:,0:n-1] += torch.diag(neg_one,0) \n",
    "F[:,1:n] += torch.diag(pos_one,0)\n",
    "F = F.to(device=device, dtype=torch.double)  # double precision requireed in torch operations \n",
    "b = b.to(device=device, dtype=torch.double)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec80716b",
   "metadata": {},
   "source": [
    "## Spceify optimization variables and corresponding objective and constrained function.\n",
    "\n",
    "Note: please strictly follow the format of evalObjFunction and combinedFunction, which will be used in the PyGRANSO main algortihm. *X_struct* and *data_in* are always required."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fb360e75",
   "metadata": {},
   "outputs": [],
   "source": [
    "# variables and corresponding dimensions.\n",
    "var_in = {\"x\": [n,1]}\n",
    "\n",
    "def evalObjFunction(X_struct):\n",
    "    x = X_struct.x\n",
    "    x.requires_grad_(True)\n",
    "    \n",
    "    # objective function\n",
    "    f = (x-b).t() @ (x-b)  + eta * torch.norm( F@x, p = 1)\n",
    "    return f\n",
    "\n",
    "def combinedFunction(X_struct):\n",
    "    x = X_struct.x\n",
    "    x.requires_grad_(True)\n",
    "    \n",
    "    # objective function\n",
    "    f = (x-b).t() @ (x-b)  + eta * torch.norm( F@x, p = 1)\n",
    "    \n",
    "    # inequality constraint, matrix form\n",
    "    ci = None\n",
    "    # equality constraint \n",
    "    ce = None\n",
    "\n",
    "    return [f,ci,ce]\n",
    "\n",
    "obj_eval_fn = lambda X_struct: evalObjFunction(X_struct)\n",
    "comb_fn = lambda X_struct: combinedFunction(X_struct)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0f55ace",
   "metadata": {},
   "source": [
    "## Specify user-defined options for PyGRANSO algorithm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f3a65b57",
   "metadata": {},
   "outputs": [],
   "source": [
    "opts = Options()\n",
    "opts.QPsolver = 'osqp' \n",
    "opts.x0 = torch.ones((n,1)).to(device=device, dtype=torch.double)\n",
    "opts.print_level = 1\n",
    "opts.print_frequency = 10"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bca18c7",
   "metadata": {},
   "source": [
    "## Run main algorithm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "632976b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\u001b[33m╔═════ QP SOLVER NOTICE ════════════════════════════════════════════════════════════════════════╗\n",
      "\u001b[0m\u001b[33m║  PyGRANSO requires a quadratic program (QP) solver that has a quadprog-compatible interface,  ║\n",
      "\u001b[0m\u001b[33m║  the default is osqp. Users may provide their own wrapper for the QP solver.                  ║\n",
      "\u001b[0m\u001b[33m║  To disable this notice, set opts.quadprog_info_msg = False                                   ║\n",
      "\u001b[0m\u001b[33m╚═══════════════════════════════════════════════════════════════════════════════════════════════╝\n",
      "\u001b[0m══════════════════════════════════════════════════════════════════════════════════════════════╗\n",
      "PyGRANSO: Python numerical package using GRadient-based Algorithm for Non-Smooth Optimization ║ \n",
      "Version 1.1.0                                                                                 ║ \n",
      "MIT License Copyright (c) 2021 SUN Group @ UMN                                                ║ \n",
      "══════════════════════════════════════════════════════════════════════════════════════════════╣\n",
      "Problem specifications:                                                                       ║ \n",
      " # of variables                     :   80                                                    ║ \n",
      " # of inequality constraints        :    0                                                    ║ \n",
      " # of equality constraints          :    0                                                    ║ \n",
      "═════╦════════════╦════════════════╦═════════════╦═══════════════════════╦════════════════════╣\n",
      "     ║ Penalty Fn ║                ║  Violation  ║ <--- Line Search ---> ║ <- Stationarity -> ║ \n",
      "Iter ║ Mu │ Value ║    Objective   ║ Ineq │  Eq  ║ SD │ Evals │     t    ║ Grads │    Value   ║ \n",
      "═════╬════════════╬════════════════╬═════════════╬═══════════════════════╬════════════════════╣\n",
      "   0 ║  - │   -   ║  23.9720755177 ║   -  │   -  ║ -  │     1 │ 0.000000 ║     1 │ 9.792257   ║ \n",
      "  10 ║  - │   -   ║  6.11242762691 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 1.886202   ║ \n",
      "  20 ║  - │   -   ║  5.55928361973 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.992414   ║ \n",
      "  30 ║  - │   -   ║  5.31815576231 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 1.091197   ║ \n",
      "  40 ║  - │   -   ║  5.20063323032 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 0.859940   ║ \n",
      "  50 ║  - │   -   ║  5.15831247662 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 0.953927   ║ \n",
      "  60 ║  - │   -   ║  5.13076954691 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 0.287711   ║ \n",
      "  70 ║  - │   -   ║  5.11261199123 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 0.315218   ║ \n",
      "  80 ║  - │   -   ║  5.09731135000 ║   -  │   -  ║ QN │     3 │ 0.250000 ║     1 │ 0.135741   ║ \n",
      "  90 ║  - │   -   ║  5.08764960138 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.059596   ║ \n",
      " 100 ║  - │   -   ║  5.08307079504 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.021728   ║ \n",
      " 110 ║  - │   -   ║  5.08033270693 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.019296   ║ \n",
      " 120 ║  - │   -   ║  5.07942940005 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 0.003682   ║ \n",
      " 130 ║  - │   -   ║  5.07875782846 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.008897   ║ \n",
      " 140 ║  - │   -   ║  5.07840647141 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 0.002367   ║ \n",
      " 150 ║  - │   -   ║  5.07822900856 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.003504   ║ \n",
      " 160 ║  - │   -   ║  5.07812046646 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 0.001214   ║ \n",
      " 170 ║  - │   -   ║  5.07805479861 ║   -  │   -  ║ QN │     7 │ 0.015625 ║     1 │ 6.21e-04   ║ \n",
      " 180 ║  - │   -   ║  5.07801875464 ║   -  │   -  ║ QN │     7 │ 0.015625 ║     1 │ 4.77e-04   ║ \n",
      " 190 ║  - │   -   ║  5.07799560661 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 1.17e-04   ║ \n",
      "═════╬════════════╬════════════════╬═════════════╬═══════════════════════╬════════════════════╣\n",
      "     ║ Penalty Fn ║                ║  Violation  ║ <--- Line Search ---> ║ <- Stationarity -> ║ \n",
      "Iter ║ Mu │ Value ║    Objective   ║ Ineq │  Eq  ║ SD │ Evals │     t    ║ Grads │    Value   ║ \n",
      "═════╬════════════╬════════════════╬═════════════╬═══════════════════════╬════════════════════╣\n",
      " 200 ║  - │   -   ║  5.07798294167 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 1.12e-04   ║ \n",
      " 210 ║  - │   -   ║  5.07797328047 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 3.99e-04   ║ \n",
      " 220 ║  - │   -   ║  5.07796701771 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 1.10e-04   ║ \n",
      " 230 ║  - │   -   ║  5.07796178749 ║   -  │   -  ║ QN │     3 │ 0.250000 ║     1 │ 2.01e-04   ║ \n",
      " 240 ║  - │   -   ║  5.07795849453 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 8.33e-05   ║ \n",
      " 250 ║  - │   -   ║  5.07795727020 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 6.76e-05   ║ \n",
      " 260 ║  - │   -   ║  5.07795615914 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 2.93e-05   ║ \n",
      " 270 ║  - │   -   ║  5.07795585543 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 1.83e-05   ║ \n",
      " 280 ║  - │   -   ║  5.07795568966 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 3.58e-05   ║ \n",
      " 290 ║  - │   -   ║  5.07795558861 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 1.97e-05   ║ \n",
      " 300 ║  - │   -   ║  5.07795552833 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 2.17e-05   ║ \n",
      " 310 ║  - │   -   ║  5.07795548293 ║   -  │   -  ║ QN │     7 │ 0.015625 ║     1 │ 5.03e-06   ║ \n",
      " 320 ║  - │   -   ║  5.07795545267 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 1.68e-05   ║ \n",
      " 330 ║  - │   -   ║  5.07795539919 ║   -  │   -  ║ QN │     3 │ 0.250000 ║     1 │ 2.37e-06   ║ \n",
      " 340 ║  - │   -   ║  5.07795531984 ║   -  │   -  ║ QN │     2 │ 0.500000 ║     1 │ 4.22e-06   ║ \n",
      " 350 ║  - │   -   ║  5.07795529483 ║   -  │   -  ║ QN │     3 │ 0.250000 ║     1 │ 1.30e-06   ║ \n",
      " 360 ║  - │   -   ║  5.07795527117 ║   -  │   -  ║ QN │     3 │ 0.250000 ║     1 │ 9.28e-06   ║ \n",
      " 370 ║  - │   -   ║  5.07795526252 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 6.06e-06   ║ \n",
      " 380 ║  - │   -   ║  5.07795525902 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 3.82e-06   ║ \n",
      " 390 ║  - │   -   ║  5.07795525772 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 5.91e-06   ║ \n",
      "═════╬════════════╬════════════════╬═════════════╬═══════════════════════╬════════════════════╣\n",
      "     ║ Penalty Fn ║                ║  Violation  ║ <--- Line Search ---> ║ <- Stationarity -> ║ \n",
      "Iter ║ Mu │ Value ║    Objective   ║ Ineq │  Eq  ║ SD │ Evals │     t    ║ Grads │    Value   ║ \n",
      "═════╬════════════╬════════════════╬═════════════╬═══════════════════════╬════════════════════╣\n",
      " 400 ║  - │   -   ║  5.07795525717 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 2.85e-06   ║ \n",
      " 410 ║  - │   -   ║  5.07795525684 ║   -  │   -  ║ QN │     3 │ 0.250000 ║     1 │ 4.27e-06   ║ \n",
      " 420 ║  - │   -   ║  5.07795525661 ║   -  │   -  ║ QN │     8 │ 0.007812 ║     1 │ 2.90e-06   ║ \n",
      " 430 ║  - │   -   ║  5.07795525647 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 1.83e-07   ║ \n",
      " 440 ║  - │   -   ║  5.07795525636 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 3.49e-07   ║ \n",
      " 450 ║  - │   -   ║  5.07795525628 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 1.53e-07   ║ \n",
      " 460 ║  - │   -   ║  5.07795525623 ║   -  │   -  ║ QN │     6 │ 0.031250 ║     1 │ 1.11e-07   ║ \n",
      " 470 ║  - │   -   ║  5.07795525620 ║   -  │   -  ║ QN │     4 │ 0.125000 ║     1 │ 1.35e-07   ║ \n",
      " 480 ║  - │   -   ║  5.07795525619 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 8.67e-08   ║ \n",
      " 490 ║  - │   -   ║  5.07795525618 ║   -  │   -  ║ QN │     5 │ 0.062500 ║     1 │ 6.57e-08   ║ \n",
      "═════╩════════════╩════════════════╩═════════════╩═══════════════════════╩════════════════════╣\n",
      "F = final iterate, B = Best (to tolerance), MF = Most Feasible                                ║ \n",
      "Optimization results:                                                                         ║ \n",
      "═════╦════════════╦════════════════╦═════════════╦═══════════════════════╦════════════════════╣\n",
      "   F ║    │       ║  5.07795525618 ║   -  │   -  ║    │       │          ║       │            ║ \n",
      "   B ║    │       ║  5.07795525618 ║   -  │   -  ║    │       │          ║       │            ║ \n",
      "═════╩════════════╩════════════════╩═════════════╩═══════════════════════╩════════════════════╣\n",
      "Iterations:              495                                                                  ║ \n",
      "Function evaluations:    2374                                                                 ║ \n",
      "PyGRANSO termination code: 0 --- converged to stationarity tolerance.                         ║ \n",
      "══════════════════════════════════════════════════════════════════════════════════════════════╝\n",
      "Total Wall Time: 2.4120285511016846s\n"
     ]
    }
   ],
   "source": [
    "start = time.time()\n",
    "soln = pygranso(combinedFunction = comb_fn, objEvalFunction = obj_eval_fn,var_dim_map = var_in, torch_device = device, user_opts = opts)\n",
    "end = time.time()\n",
    "print(\"Total Wall Time: {}s\".format(end - start))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
